{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","components/utils/validators/validators.js","components/common/FormsControls/FormsControls.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHook.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","required","value","maxLengthCreator","maxLength","length","formsControl","tag","input","meta","props","hasError","error","touched","className","mod","warning","React","createElement","errorMessage","Textarea","Input","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","Post","post","src","avatar","alt","postText","message","likes","likesNumbers","likesCount","PostReduxForm","reduxForm","form","onSubmit","handleSubmit","newPost","newText","Field","name","component","placeholder","validate","button","MyPosts","dialogsElements","profilePage","posts","map","m","id","addPost","MyPostsContainer","connect","state","Component","ProfileStatusWitchHook","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","target","onBlur","updateStatus","autoFocus","ProfileInfo","profile","profileInfo","photos","large","Profile","content","ProfileContainer","userId","this","match","params","authUserId","history","profileThunk","getStatusThunk","updateStatusThunk","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/4.dedeb3c7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"warning\":\"FormsControls_warning__3zCki\",\"errorMessage\":\"FormsControls_errorMessage__1Qk8O\",\"formError\":\"FormsControls_formError__2dVxI\",\"test\":\"FormsControls_test__1L5SY\"};","\r\nexport const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\"\r\n\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined\r\n}","import React from \"react\";\r\nimport mod from \"./FormsControls.module.css\"\r\n\r\nconst formsControl = (tag) => ({input,meta,...props}) => {\r\n\r\n    const hasError = meta.error && meta.touched;\r\n\r\n    return (\r\n\r\n        <div className={hasError ? mod.warning : \"\"}>\r\n            <div> {React.createElement(tag, {...input, ...props})}</div>\r\n            {hasError && <span className={mod.errorMessage}>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = formsControl(\"textarea\")\r\nexport const Input = formsControl(\"input\")","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__HfZML\",\"postText\":\"Post_postText__DzXuF\",\"likes\":\"Post_likes__21i-v\",\"likesNumbers\":\"Post_likesNumbers__2huYw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPost\":\"MyPosts_newPost__14BRI\",\"posts\":\"MyPosts_posts__wDSQo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"ProfileInfo_postsBlock__2BPor\",\"fon\":\"ProfileInfo_fon__OaCZH\"};","\r\nimport mod from \"./Post.module.css\"\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <div className={mod.post}>\r\n                <div><img src={props.avatar} alt=\"\"/></div>\r\n                <div className={mod.postText}>{props.message}</div>\r\n            </div>\r\n            <div className={mod.likes}>\r\n\r\n                <img src=\"https://pngimg.com/uploads/like/like_PNG29.png\" alt=\"\"/>\r\n\r\n                <div className={mod.likesNumbers}>\r\n                    <b>{props.likesCount}</b>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport Post from \"./Post/Post\";\r\nimport mod from \"./MyPosts.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\n\r\nconst maxLength = maxLengthCreator(30)\r\n\r\nconst MyPostForm = (props) => {\r\n\r\n\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={mod.newPost}>\r\n\r\n                <h3>New Post</h3>\r\n\r\n                <div className={mod.newText}>\r\n                    <Field name=\"postText\"  component={Textarea}\r\n                           placeholder=\"Post message\" validate={[required,maxLength]}/>\r\n                </div>\r\n\r\n                <div className={mod.button}><button>Add post</button></div>\r\n\r\n\r\n        </form>\r\n\r\n\r\n    )\r\n}\r\n\r\nconst PostReduxForm = reduxForm({\r\n    form: 'newPostText'\r\n})(MyPostForm)\r\n\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    const addNewPost = (value) => {\r\n        props.addPost(value.postText)\r\n    }\r\n\r\n    let dialogsElements = props. profilePage.posts.map(m => <Post key={m.id} message={m.message} likesCount={m.likesCount} avatar={m.avatar}/>);\r\n\r\n    return (\r\n        <div>\r\n            <div><PostReduxForm onSubmit={addNewPost}/></div>\r\n\r\n\r\n            <div className={mod.posts}>\r\n                {dialogsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n             export default MyPosts;\r\n\r\n","import React from 'react';\r\nimport MyPosts from \"./MyPosts\";\r\nimport {addPost} from \"../../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n         profilePage: state.profilePage,\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nconst MyPostsContainer = connect (mapStateToProps, {addPost}) (MyPosts);\r\n\r\n\r\n    export default MyPostsContainer;","import React from 'react'\r\n\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status:this.props.status\r\n    }\r\n\r\n    activeEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status:e.target.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status:this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return <div>\r\n            {!this.state.editMode && <div>\r\n                <span onDoubleClick={this.activeEditMode}>{this.props.status  || \"status\"}</span>\r\n            </div>}\r\n\r\n            {this.state.editMode && <div>\r\n                <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status}/>\r\n            </div>}\r\n\r\n\r\n        </div>\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;\r\n\r\n\r\n\r\n\r\n","import React, {useEffect, useState} from 'react'\r\n\r\n\r\n\r\nconst ProfileStatusWitchHook = (props) => {\r\n\r\n    let [editMode,setEditMode] = useState(false);\r\n    let [status,setStatus] = useState(props.status);\r\n\r\n    useEffect(()=>{\r\n        setStatus(props.status)\r\n    },[props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n   const onStatusChange = (e) => {\r\n        setStatus(e.target.value)\r\n        }\r\n\r\n        return <div>\r\n            {!editMode && <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status  || \"status\"}</span>\r\n            </div>}\r\n\r\n            {editMode && <div>\r\n                <input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true} value={status}/>\r\n            </div>}\r\n\r\n\r\n        </div>\r\n\r\n\r\n}\r\n\r\nexport default ProfileStatusWitchHook;\r\n\r\n\r\n\r\n\r\n","import mod from \"./ProfileInfo.module.css\"\r\nimport Preloader from \"../../common/Preloader/Preloager\";\r\nimport ProfileStatus from \"./ProfileStatus\"\r\nimport ProfileStatusWitchHook from \"./ProfileStatusWithHook\";\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n\r\n    return (\r\n       <div className={mod.profileInfo}>\r\n           {/*< img className={mod.fon} src=\"https://avatars.mds.yandex.net/get-pdb/251121/63f7b74c-ea57-4fc8-95be-7934d9798c6f/s1200\"/>*/}\r\n\r\n           {/* <div className={mod.postsBlock}>ava+post</div>*/}\r\n\r\n            <div className={mod.profile}>\r\n                <img src={props.profile.photos.large || \"https://st.depositphotos.com/1779253/5140/v/600/depositphotos_51405259-stock-illustration-male-avatar-profile-picture-use.jpg\"} alt=\"\"/>\r\n\r\n                <ProfileStatusWitchHook status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n\r\n}\r\nexport default ProfileInfo;","import mod from './Profile.module.css';\r\nimport MyPostsContainer from \"./MyPosts/MyPostContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n\r\n    return (\r\n\r\n        < div className={mod.content}>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n\r\n        }\r\n\r\n   export default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatusThunk, profileThunk, updateStatusThunk} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n   let userId = this.props.match.params.userId\r\n        if (!userId) {userId = this.props.authUserId;\r\n        if (!userId) this.props.history.push(\"/login\")\r\n\r\n        }\r\n  this.props.profileThunk(userId)\r\n  this.props.getStatusThunk(userId)\r\n    }\r\n\r\n\r\n    render () {\r\n\r\n            return  <Profile {...this.props}  profile={this.props.profile}\r\n                             status={this.props.status} updateStatus={this.props.updateStatusThunk} />\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n     profile:state.profilePage.profile,\r\n     status:state.profilePage.status,\r\n     authUserId:state.auth.id,\r\n     isAuth:state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default compose (\r\n    connect (mapStateToProps,{profileThunk,getStatusThunk,updateStatusThunk}),\r\n    withRouter,\r\n) (ProfileContainer)"],"sourceRoot":""}