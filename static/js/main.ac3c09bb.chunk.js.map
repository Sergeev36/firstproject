{"version":3,"sources":["components/Navbar/Navbar.module.css","reportWebVitals.js","redux/app-reducer.ts","redux/redux-store.js","components/Navbar/Navbar.jsx","components/Header/Header.jsx","components/Header/HederContainer.jsx","App.js","index.js","redux/auth-reducer.ts","components/Header/Header.module.css","assets/images/preloader.gif","components/common/Preloader/Preloager.jsx","redux/profile-reducer.ts","redux/dialogs-reducer.ts","redux/users-reducer.ts","api/api.js"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SET_INITIALIZED","initialState","initialized","appReducer","state","action","type","reducers","combineReducers","dialogsPage","dialogsReducer","profilePage","profileReducer","usersPage","usersReducer","auth","authReducer","form","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","Navbar","props","className","mod","nav","link","to","activeClassName","active","Header","header","src","loginBlock","isAuth","login","logInOut","onClick","loginOutThunk","HeaderContainer","this","React","Component","connect","Music","lazy","Settings","ProfileContainer","DialogsContainer","UsersContainer","News","Login","App","initializeThunk","fallback","path","render","exact","component","AppContainer","dispatch","authThunk","AppJS","ReactDOM","StrictMode","document","getElementById","SET_USER_DATA","SET_CAPTCHA","id","email","captcha","setUserData","payload","a","LoginApi","authMe","data","resultCode","loginThunk","password","rememberMe","getCaptchaUrl","message","messages","length","stopSubmit","_error","loginOut","getCaptcha","Preloader","preloader","alt","ADD_POST","SET_USERS_PROFILE","SET_STATUS","SET_PHOTO","posts","likesCount","avatar","profile","status","addPost","postText","setStatus","profileThunk","userId","ProfileAPI","userProfile","getStatusThunk","getStatus","updateStatusThunk","updateStatus","updatePhotoThunk","photo","updatePhoto","photos","dataThunk","getState","updateData","Promise","reject","newPost","ADD_MESSAGE","names","name","addMessage","messageText","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_USER_COUNT","TOGGLE_IS_FETCHING","TOGGLE_FOLLOW_USER","users","usersCount","pageSize","currentPage","isFetching","followingInProgress","follow","unfollow","setUsers","setCurrentPage","pageNumber","setToggleIsFetching","fetching","setFollowingInProgress","requestUsers","usersAPI","getUsers","items","count","totalCount","getUsersPage","getUsers2","followThunk","usersACT","userFollow","unfollowThunk","userUnfollow","map","u","followed","filter","instance","axios","withCredentials","baseURL","headers","get","response","delete","post","put","formData","FormData","append"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,OAAS,uBAAuB,QAAU,wBAAwB,gBAAkB,kC,+FCW7IC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,yHCLVQ,EAAkB,sBAKlBC,EAAgC,CAEhCC,aAAY,GAwCDC,EApCI,WAAwD,IAAvDC,EAAsD,uDAA9CH,EAAcI,EAAgC,uCACtE,OAAQA,EAAOC,MAEX,KAAKN,EACD,OAAO,2BACAI,GADP,IAEIF,aAAY,IAGpB,QACI,OAAOE,I,wDCXfG,EAAWC,YAAgB,CAE3BC,YAAYC,IACZC,YAAYC,IACZC,UAAUC,IACVC,KAAKC,IACLC,KAAKC,IACLC,IAAIhB,IAMOiB,EAFHC,YAAYd,EAASe,YAAgBC,M,iBCClCC,EAlBA,SAACC,GAIZ,OACI,sBAAKC,UAAWC,IAAIC,IAApB,UACI,qBAAKF,UAAWC,IAAIE,KAApB,SAA0B,cAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBJ,IAAIK,OAA5C,uBAC1B,qBAAKN,UAAWC,IAAIE,KAApB,SAA0B,cAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBJ,IAAIK,OAA5C,wBAC1B,qBAAKN,UAAWC,IAAIE,KAApB,SAA0B,cAAC,IAAD,CAASC,GAAG,SAASC,gBAAiBJ,IAAIK,OAA1C,qBAC1B,qBAAKN,UAAWC,IAAIE,KAApB,SAA0B,cAAC,IAAD,CAASC,GAAG,QAAQC,gBAAiBJ,IAAIK,OAAzC,oBAC1B,qBAAKN,UAAWC,IAAIE,KAApB,SAA0B,cAAC,IAAD,CAASC,GAAG,SAASC,gBAAiBJ,IAAIK,OAA1C,qBAC1B,qBAAKN,UAAWC,IAAIE,KAApB,SAA0B,cAAC,IAAD,CAASC,GAAG,YAAYC,gBAAiBJ,IAAIK,OAA7C,2B,iBCavBC,EAzBA,SAACR,GAGZ,OACI,wBACIC,UAAWC,IAAIO,OADnB,SAEG,gCAEI,qBACAC,IAAI,wIACJ,qBAAKT,UAAWC,IAAIS,WAApB,SAEKX,EAAMY,OACD,gCAAMZ,EAAMa,MAAZ,IAAmB,wBAAQZ,UAAWC,IAAIY,SAAUC,QAASf,EAAMgB,cAAhD,wBACpB,cAAC,IAAD,CAASf,UAAWC,IAAIY,SAAWT,GAAI,SAAvC,2BCXlBY,E,uKAIE,OAAO,cAAC,EAAD,eAAYC,KAAKlB,Y,GAJFmB,IAAMC,WAgBrBC,eAPO,SAAC1C,GACnB,MAAO,CACHiC,OAAOjC,EAAMW,KAAKsB,OAClBC,MAAMlC,EAAMW,KAAKuB,SAIe,CAACG,mBAA1BK,CAA2CJ,GCfpDK,EAAQH,IAAMI,MAAK,kBAAM,iCACzBC,EAAWL,IAAMI,MAAK,kBAAM,kCAC5BE,EAAmBN,IAAMI,MAAK,kBAAM,uDACpCG,EAAmBP,IAAMI,MAAK,kBAAM,uDACpCI,EAAiBR,IAAMI,MAAK,kBAAM,iCAClCK,EAAOT,IAAMI,MAAK,kBAAM,iCACxBM,EAAQV,IAAMI,MAAK,kBAAM,uDAUzBO,E,kLAGEZ,KAAKlB,MAAM+B,oB,+BAQf,OAAKb,KAAKlB,MAAMvB,YAIZ,sBAAKwB,UAAU,cAAf,UACQ,cAAC,EAAD,IACA,cAAC,EAAD,IACA,qBAAKA,UAAU,uBAAf,SACG,cAAC,WAAD,CAAU+B,SAAU,cAAC,IAAD,IAApB,SACI,eAAC,IAAD,WACH,cAAC,IAAD,CAAOC,KAAK,oBAAoBC,OAAS,kBAAM,cAACT,EAAD,OAC/C,cAAC,IAAD,CAAOU,OAAK,EAACF,KAAK,WAAWC,OAAS,kBAAM,cAACR,EAAD,OAC5C,cAAC,IAAD,CAAOS,OAAK,EAACF,KAAK,SAASC,OAAS,kBAAM,cAACP,EAAD,OAC1C,cAAC,IAAD,CAAOM,KAAK,QAAQG,UAAWR,IAC/B,cAAC,IAAD,CAAOK,KAAK,SAASG,UAAWd,IAChC,cAAC,IAAD,CAAOW,KAAK,YAAYG,UAAWZ,IACnC,cAAC,IAAD,CAAOS,KAAK,SAASG,UAAWP,IAChC,cAAC,IAAD,CAAOI,KAAK,IAAIC,OAAS,kBAAM,cAACT,EAAD,OAC/B,cAAC,IAAD,CAAOQ,KAAK,IAAIC,OAAS,kBAAM,6DAlBT,cAAC,IAAD,Q,GAXxBf,IAAMC,WA4ClBiB,EAAehB,aANG,SAAC1C,GACvB,MAAO,CACHF,YAAYE,EAAMe,IAAIjB,eAIkB,CAACsD,gBLlChB,WAC3B,OAAO,SAACO,GACSA,EAASC,eACftE,MAAK,WACTqE,EANsD,CAACzD,KAAKN,UKoClD8C,CAA6CS,GAYnDU,EAVD,WACV,OAAO,cAAC,IAAD,UAEH,cAAC,IAAD,CAAU7C,MAAOA,EAAjB,SACI,cAAC0C,EAAD,SChERI,IAASP,OACL,cAAC,IAAMQ,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAKhC9E,K,uLChBI+E,EAAgB,qBAChBC,EAAc,qBAGdtE,EAAe,CACfuE,GAAI,KACJC,MAAM,KACNnC,MAAM,KACND,QAAO,EACPqC,QAAQ,MAqCCC,EAAc,SAACH,EAAkBC,EAAqBnC,EAAqBD,GAA7D,MACtB,CAAC/B,KAAKgE,EAAcM,QAAQ,CAACJ,KAAGC,QAAMnC,QAAMD,YAQpC2B,EAAY,yDAAM,WAAOD,GAAP,uBAAAc,EAAA,sEAENC,IAASC,SAFH,OAGS,KAD5BC,EAFmB,QAGNC,aAAmB,EACDD,EAAKA,KAAvBR,EADkB,EAClBA,GAAGC,EADe,EACfA,MAAMnC,EADS,EACTA,MACdyB,EAASY,EAAYH,EAAGC,EAAMnC,GAAM,KALzB,2CAAN,uDAWZ4C,EAAa,SAACT,EAAaU,EAAgBC,EAAmBV,GAAjD,8CAAoE,WAAOX,GAAP,iBAAAc,EAAA,sEACrEC,IAASxC,MAAMmC,EAAMU,EAASC,EAAWV,GAD4B,OAEtD,KAD5BM,EADkF,QAErEC,WACLlB,EAASC,MAEe,KAApBgB,EAAKC,YACLlB,EAASsB,KAETC,EAAUN,EAAKO,SAASC,OAAS,EAAKR,EAAKO,SAAS,GAAK,aAC7DxB,EAAS0B,YAAW,QAAQ,CAACC,OAAOJ,MATsC,2CAApE,uDAab7C,EAAgB,yDAAM,WAAOsB,GAAP,SAAAc,EAAA,sEACVC,IAASa,WADC,OAEK,IAFL,OAEVV,YACLlB,EAASY,EAAY,KAAK,KAAK,MAAK,IAHrB,2CAAN,uDAQhBU,EAAgB,yDAAM,WAAOtB,GAAP,eAAAc,EAAA,sEACVC,IAASc,aADC,OACvBZ,EADuB,OAEhBjB,EApC2C,CAACzD,KAAKiE,EAAYK,QAAQ,CAACF,QAoClDM,KAFJ,2CAAN,uDAYdhE,IApFK,WAAwD,IAAvDZ,EAAsD,uDAA9CH,EAAcI,EAAgC,uCACvE,OAAQA,EAAOC,MAEX,KAAKgE,EACL,KAAMC,EACF,OAAO,2BACAnE,GACAC,EAAOuE,SAKlB,QACI,OAAOxE,K,mBC/BnBf,EAAOC,QAAU,CAAC,OAAS,uBAAuB,WAAa,2BAA2B,SAAW,2B,2CCDtF,MAA0B,sCCM1BuG,IAJC,SAACpE,GACb,OAAO,qBAAKU,IAAK2D,EAAWC,IAAI,O,qSCEhCC,EAAW,uBACXC,EAAoB,gCACpBC,EAAa,qBACbC,EAAY,wBAGZlG,EAAe,CAEXmG,MAAO,CACH,CACI5B,GAAI,EACJc,QAAS,sBACTe,WAAY,GACZC,OAAQ,qEAEZ,CACI9B,GAAI,EACJc,QAAS,qBACTe,WAAY,EACZC,OAAQ,iFAGhBC,QAAS,KACTC,OAAO,IAwDFC,EAAU,SAACC,GAAD,MAAkC,CAACpG,KAAK0F,EAASU,aAc3DC,EAAY,SAACH,GAAD,MAAmC,CAAClG,KAAK4F,EAAWM,WAUhEI,EAAe,SAACC,GAAD,8CAAmB,WAAO9C,GAAP,eAAAc,EAAA,sEACtBiC,IAAWC,YAAYF,GADD,OACnC7B,EADmC,OAE/BjB,EAnB2D,CAACzD,KAAK2F,EAAkBM,QAmB3DvB,IAFO,2CAAnB,uDAKfgC,EAAiB,SAACH,GAAD,8CAAmB,WAAO9C,GAAP,eAAAc,EAAA,sEAC3BiC,IAAWG,UAAUJ,GADM,OACzC7B,EADyC,OAErCjB,EAAS4C,EAAU3B,IAFkB,2CAAnB,uDAKjBkC,EAAoB,SAACV,GAAD,8CAAkB,WAAOzC,GAAP,SAAAc,EAAA,sEAC9BiC,IAAWK,aAAaX,GADM,OAEX,IAFW,OAE1BvB,YACTlB,EAAS4C,EAAUH,IAHgB,2CAAlB,uDAMpBY,EAAmB,SAACC,GAAD,8CAAqB,WAAOtD,GAAP,eAAAc,EAAA,sEAChCiC,IAAWQ,YAAYD,GADS,OAEb,KADhCrC,EAD6C,QAE5BC,YACTlB,GAtBSwD,EAsBSvC,EAAKA,KAAKuC,OAtBiB,CAACjH,KAAK6F,EAAUoB,YAmBxB,iCAnB7B,IAACA,IAmB4B,OAArB,uDAOnBC,EAAY,SAACjB,GAAD,8CAAwB,WAAOxC,EAAa0D,GAApB,iBAAA5C,EAAA,6DACvCgC,EAASY,IAAW1G,KAAKyD,GADc,SAE5BsC,IAAWY,WAAWnB,GAFM,UAGnB,KADtBvB,EAFyC,QAGlCC,WAHkC,gBAIvClB,EAAS6C,EAAaC,IAJiB,8BAMvC9C,EAAS0B,YAAW,OAAO,CAACC,OAAOV,EAAKO,SAAS,MANV,kBAOhCoC,QAAQC,OAAO5C,EAAKO,SAAS,KAPG,4CAAxB,yDAcV3E,IA/GQ,WAAwD,IAAvDR,EAAsD,uDAA9CH,EAAcI,EAAgC,uCAC1E,OAAQA,EAAOC,MAIX,KAAK0F,EACD,IAAI6B,EAAU,CACVrD,GAAI,EACJc,QAASjF,EAAOqG,SAChBL,WAAY,EACZC,OAAQ,yIAGZ,OAAO,2BACAlG,GADP,IAEIgG,MAAM,GAAD,mBAAMhG,EAAMgG,OAAZ,CAAmByB,MAKhC,KAAK5B,EACD,OAAO,2BACA7F,GADP,IAEImG,QAASlG,EAAOkG,UAGxB,KAAKL,EACD,OAAO,2BACA9F,GADP,IAEIoG,OAAQnG,EAAOmG,SAGvB,KAAKL,EACD,OAAO,2BACA/F,GADP,IAEImG,QAAQ,2BAAKnG,EAAMmG,SAAZ,IAAoBgB,OAAOlH,EAAOkH,WAKjD,QACI,OAAOnH,K,qFCzEf0H,EAAc,0BAYd7H,EAAe,CAEXsF,SAAU,CACN,CAACf,GAAI,EAAGc,QAAS,wBACjB,CAACd,GAAI,EAAGc,QAAS,wBACjB,CAACd,GAAI,EAAGc,QAAS,wBAErByC,MAAO,CACH,CAACvD,GAAI,EAAGwD,KAAM,SAAU1B,OAAQ,qEAChC,CACI9B,GAAI,EACJwD,KAAM,SACN1B,OAAQ,yFAEZ,CAAC9B,GAAI,EAAGwD,KAAM,OAAQ1B,OAAQ,gFAC9B,CAAC9B,GAAI,EAAGwD,KAAM,YAAa1B,OAAQ,qEACnC,CAAC9B,GAAI,EAAGwD,KAAM,QAAS1B,OAAQ,kIA0B9B2B,EAAa,SAACC,GAAD,MAAwC,CAAC5H,KAAKwH,EAAYI,gBAGrExH,IArBQ,WAA0D,IAAzDN,EAAwD,uDAAhDH,EAAcI,EAAkC,uCAE5E,OAAQA,EAAOC,MACX,KAAKwH,EACD,OAAO,2BACA1H,GADP,IAEImF,SAAS,GAAD,mBAAMnF,EAAMmF,UAAZ,CAAsB,CAACf,GAAI,EAAGc,QAASjF,EAAO6H,iBAG9D,QACI,OAAO9H,K,yNC7Cf+H,EAAS,mBACTC,EAAW,qBACXC,EAAY,sBACZC,EAAmB,6BACnBC,EAAiB,2BACjBC,EAAqB,+BACrBC,EAAqB,+BAUrBxI,EAAe,CACfyI,MAAO,GACPC,WAAa,EACbC,SAAW,EACXC,YAAa,EACbC,YAAW,EACXC,oBAAoB,IA8DXC,EAAS,SAACnC,GAAD,MAA+B,CAACvG,KAAK6H,EAAQtB,WAMtDoC,EAAW,SAACpC,GAAD,MAAiC,CAACvG,KAAK8H,EAAUvB,WAM5DqC,EAAW,SAACR,GAAD,MAA2C,CAACpI,KAAK+H,EAAWK,UAMvES,EAAiB,SAACC,GAAD,MAA2C,CAAC9I,KAAKgI,EAAkBc,eAYpFC,EAAsB,SAACC,GAAD,MAA+C,CAAChJ,KAAKkI,EAAoBc,aAO/FC,EAAyB,SAACD,EAAiBzC,GAAlB,MAAgE,CAACvG,KAAKmI,EAAoBa,WAASzC,WAG5H2C,EAAe,SAACX,EAAoBD,GAArB,8CAAyC,WAAO7E,GAAP,eAAAc,EAAA,6DAEhEd,EAASsF,GAAoB,IAFmC,SAGhDI,IAASC,SAASb,EAAYD,GAHkB,OAG7D5D,EAH6D,OAI5DjB,EAASsF,GAAoB,IAC7BtF,EAASmF,EAASlE,EAAK2E,QACvB5F,GAtB0B6F,EAsBE5E,EAAK6E,WAtBkC,CAACvJ,KAAKiI,EAAgBqB,WAgB7B,iCAhBnC,IAACA,IAgBkC,OAAzC,uDAUfE,EAAe,SAACV,EAAkBR,GAAnB,8CAAuC,WAAO7E,GAAP,eAAAc,EAAA,6DAC3Dd,EAASoF,EAAeC,IACxBrF,EAASsF,GAAoB,IAF8B,SAG9CI,IAASM,UAAUX,EAAWR,GAHgB,OAG3D5D,EAH2D,OAIvDjB,EAASsF,GAAoB,IAC7BtF,EAASmF,EAASlE,EAAK2E,QALgC,2CAAvC,uDAQfK,EAAc,SAACnD,GAAD,8CAAmB,WAAO9C,GAAP,SAAAc,EAAA,6DAC1Cd,EAASwF,GAAuB,EAAM1C,IADI,SAEzBoD,IAASC,WAAWrD,GAFK,OAIlB,IAJkB,OAIjC5B,YACLlB,EAASiF,EAAOnC,IAGpB9C,EAASwF,GAAuB,EAAO1C,IARG,2CAAnB,uDAYdsD,EAAgB,SAACtD,GAAD,8CAAmB,WAAO9C,GAAP,SAAAc,EAAA,6DAC5Cd,EAASwF,GAAuB,EAAM1C,IADM,SAE3BoD,IAASG,aAAavD,GAFK,OAGpB,IAHoB,OAGnC5B,YACLlB,EAASkF,EAASpC,IAGtB9C,EAASwF,GAAuB,EAAO1C,IAPK,2CAAnB,uDAWd/F,IA1IM,WAAyD,IAAxDV,EAAuD,uDAA/CH,EAAcI,EAAiC,uCACzE,OAAQA,EAAOC,MACX,KAAK6H,EACD,OAAO,2BACA/H,GADP,IAEIsI,MAAOtI,EAAMsI,MAAM2B,KAAI,SAAAC,GACf,OAAIA,EAAE9F,KAAOnE,EAAOwG,OACT,2BAAIyD,GAAX,IAAcC,UAAU,IAErBD,OAIvB,KAAKlC,EACD,OAAO,2BACAhI,GADP,IAEIsI,MAAOtI,EAAMsI,MAAM2B,KAAI,SAAAC,GACf,OAAIA,EAAE9F,KAAOnE,EAAOwG,OACT,2BAAIyD,GAAX,IAAcC,UAAU,IAErBD,OAIvB,KAAKjC,EACD,OAAO,2BAAIjI,GAAX,IAAiBsI,MAAMrI,EAAOqI,QAGlC,KAAKJ,EACD,OAAO,2BAAIlI,GAAX,IAAiByI,YAAYxI,EAAO+I,aAGxC,KAAKb,EACD,OAAO,2BAAInI,GAAX,IAAiBuI,WAAWtI,EAAOuJ,QAGvC,KAAKpB,EACD,OAAO,2BAAIpI,GAAX,IAAiB0I,WAAWzI,EAAOiJ,WAGvC,KAAKb,EACD,OAAO,2BAAKrI,GAAZ,IAAkB2I,oBAAoB1I,EAAOiJ,SAAP,sBACxBlJ,EAAM2I,qBADkB,CACG1I,EAAOwG,SACtCzG,EAAM2I,oBAAoByB,QAAO,SAAAhG,GAAE,OAAIA,GAAMnE,EAAOwG,YAGlE,QACI,OAAOzG,K,+BC7EnB,oJAGMqK,EAAWC,SAAa,CAC1BC,iBAAiB,EACjBC,QAAQ,gDACRC,QAAQ,CAAC,UAAU,0CAMVpB,EAAW,CAEpBC,SAFoB,WAEuB,IAAjCb,EAAgC,uDAAlB,EAAGD,EAAe,uDAAJ,GAClC,OAAO6B,EAASK,IAAT,qBAA2BjC,EAA3B,kBAAgDD,IAClDlJ,MAAK,SAAAqL,GACF,OAAOA,EAAS/F,SAM5B+E,UAXoB,SAWTX,GAA4B,IAAhBR,EAAe,uDAAJ,GAC9B,OAAO6B,EAASK,IAAT,qBAA2B1B,EAA3B,kBAA+CR,IACjDlJ,MAAK,SAAAqL,GACF,OAAOA,EAAS/F,UAMnBiF,EAAW,CACpBG,aADoB,SACPvD,GACT,OAAO4D,EAASO,OAAT,iBAA0BnE,IAC5BnH,MAAK,SAAAqL,GACF,OAAOA,EAAS/F,SAI5BkF,WARoB,SAQRrD,GACT,OAAO4D,EAASQ,KAAT,iBAAwBpE,GAAU,IACnCnH,MAAK,SAAAqL,GACF,OAAOA,EAAS/F,UAOnB8B,EAAc,CAEvBC,YAFuB,SAEVF,GACb,OAAO4D,EAASK,IAAI,WAAajE,GAC5BnH,MAAK,SAAAqL,GACF,OAAOA,EAAS/F,SAIxBiC,UATuB,SASZJ,GACX,OAAO4D,EAASK,IAAI,kBAAoBjE,GACnCnH,MAAK,SAAAqL,GACF,OAAOA,EAAS/F,SAIxBmC,aAhBuB,SAgBTX,GACd,OAAOiE,EAASS,IAAI,iBAAkB,CAAC1E,WAClC9G,MAAK,SAAAqL,GACF,OAAOA,EAAS/F,SAIxBsC,YAvBuB,SAuBVD,GACT,IAAM8D,EAAW,IAAIC,SAGzB,OAFID,EAASE,OAAO,QAAShE,GAEtBoD,EAASS,IAAI,gBAAkBC,EAAU,CAC5CN,QAAS,CACL,eAAgB,yBAEnBnL,MAAK,SAAAqL,GACF,OAAOA,EAAS/F,SAIxB0C,WApCuB,SAoCXnB,GACR,OAAOkE,EAASS,IAAI,UAAW3E,GAAS7G,MAAK,SAAAqL,GACzC,OAAOA,EAAS/F,UAOfF,EAAW,CAEpBC,OAFoB,WAGhB,OAAO0F,EAASK,IAAI,WACfpL,MAAK,SAAAqL,GACF,OAAOA,EAAS/F,SAGzB1C,MARiB,SAQVmC,EAAMU,EAASC,EAAWV,GAChC,OAAO+F,EAASQ,KAAK,aAAc,CAACxG,QAAMU,WAASC,aAAWV,YACzDhF,MAAK,SAAAqL,GACF,OAAOA,EAAS/F,SAG1BW,SAdkB,WAehB,OAAO8E,EAASO,OAAO,cAClBtL,MAAK,SAAAqL,GACF,OAAOA,EAAS/F,SAI1BY,WArBkB,WAsBhB,OAAO6E,EAASK,IAAI,6BACfpL,MAAK,SAAAqL,GACF,OAAOA,EAAS/F,Y","file":"static/js/main.ac3c09bb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1a489\",\"link\":\"Navbar_link__QiyhG\",\"active\":\"Navbar_active__2S0Pn\",\"friends\":\"Navbar_friends__4dvgM\",\"friendsElements\":\"Navbar_friendsElements__aJ7fz\"};","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {authThunk} from \"./auth-reducer\";\r\n\r\nlet SET_INITIALIZED = 'app/SET_INITIALIZED';\r\n\r\ntype initialStateType = {\r\n    initialized:boolean\r\n}\r\nlet initialState:initialStateType = {\r\n\r\n    initialized:false\r\n}\r\n\r\n\r\nconst appReducer = (state = initialState, action:any):initialStateType => {\r\n    switch (action.type) {\r\n\r\n        case SET_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                initialized:true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\ntype initializedSuccessType = {\r\n    type: typeof SET_INITIALIZED\r\n}\r\nexport const  initializedSuccess = ():initializedSuccessType => ({type:SET_INITIALIZED});\r\n\r\nexport const initializeThunk = () => {\r\n    return (dispatch:any) => {\r\n       let promise = dispatch(authThunk());\r\n       promise.then(()=>{\r\n           dispatch(initializedSuccess())\r\n       })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default appReducer;","\r\nimport {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\n\r\n\r\nlet reducers = combineReducers({\r\n\r\n    dialogsPage:dialogsReducer,\r\n    profilePage:profileReducer,\r\n    usersPage:usersReducer,\r\n    auth:authReducer,\r\n    form:formReducer,\r\n    app:appReducer\r\n});\r\n\r\n\r\nlet store = createStore(reducers,applyMiddleware(thunkMiddleware))\r\n\r\nexport default store;","import {NavLink} from \"react-router-dom\";\r\nimport mod from './Navbar.module.css';\r\n\r\n\r\n\r\n\r\nconst Navbar = (props) => {\r\n\r\n\r\n\r\n    return (\r\n        <div className={mod.nav}>\r\n            <div className={mod.link}><NavLink to=\"/profile\" activeClassName={mod.active}>Profile</NavLink></div>\r\n            <div className={mod.link}><NavLink to=\"/dialogs\" activeClassName={mod.active}>Messages</NavLink></div>\r\n            <div className={mod.link}><NavLink to=\"/users\" activeClassName={mod.active}>Users</NavLink></div>\r\n            <div className={mod.link}><NavLink to=\"/news\" activeClassName={mod.active}>News</NavLink></div>\r\n            <div className={mod.link}><NavLink to=\"/music\" activeClassName={mod.active}>Music</NavLink></div>\r\n            <div className={mod.link}><NavLink to=\"/settings\" activeClassName={mod.active}>Setting</NavLink></div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Navbar;","import mod from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Header = (props) => {\r\n\r\n\r\n    return (\r\n        < header\r\n            className={mod.header}>\r\n           <div>\r\n\r\n               < img\r\n               src=\"https://images.vexels.com/media/users/3/184154/isolated/preview/9751abbb24f742adc07e993dc528bc32-colorful-3d-letter-r-by-vexels.png\" />\r\n               <div className={mod.loginBlock}>\r\n\r\n                   {props.isAuth\r\n                       ? <div>{props.login} <button className={mod.logInOut} onClick={props.loginOutThunk}>Log Out</button></div>\r\n                       :<NavLink className={mod.logInOut}  to={\"/login\"}>Login</NavLink>}\r\n\r\n               </div>\r\n           </div>\r\n\r\n\r\n            </ header >\r\n\r\n                )\r\n                };\r\n\r\nexport default Header;\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginOutThunk} from \"../../redux/auth-reducer\";\r\n\r\n\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n    render () {\r\n        return <Header {...this.props} />\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth:state.auth.isAuth,\r\n        login:state.auth.login\r\n    }\r\n}\r\n\r\nexport default connect (mapStateToProps,{loginOutThunk}) (HeaderContainer);","import './App.css';\r\nimport React,{Suspense} from \"react\";\r\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {initializeThunk} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloager\";\r\nimport store from \"./redux/redux-store\";\r\nimport Nav from './components/Navbar/Navbar';\r\nimport HeaderContainer from \"./components/Header/HederContainer\";\r\nconst Music = React.lazy(() => import(\"./components/Music/Music\"));\r\nconst Settings = React.lazy(() => import(\"./components/Settings/Settings\"));\r\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"));\r\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"));\r\nconst UsersContainer = React.lazy(() => import(\"./components/Users/UsersContainer\"));\r\nconst News = React.lazy(() => import(\"./components/News/News\"));\r\nconst Login = React.lazy(() => import(\"./components/Login/Login\"));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeThunk()\r\n    }\r\n\r\n\r\n\r\n\r\n    render () {\r\n\r\n    if (!this.props.initialized) { return <Preloader/> }\r\n\r\n    return (\r\n\r\n        <div className=\"app-wrapper\">\r\n                <HeaderContainer/>\r\n                <Nav/>\r\n                <div className=\"app-wrapper-contents\">\r\n                   <Suspense fallback={<Preloader/>}>\r\n                       <Switch>\r\n                    <Route path='/profile/:userId?' render={ () => <ProfileContainer />}/>\r\n                    <Route exact path='/dialogs' render={ () => <DialogsContainer />}/>\r\n                    <Route exact path='/users' render={ () => <UsersContainer/>}/>\r\n                    <Route path='/news' component={News}/>\r\n                    <Route path='/music' component={Music}/>\r\n                    <Route path='/settings' component={Settings}/>\r\n                    <Route path='/login' component={Login}/>\r\n                    <Route path='/' render={ () => <ProfileContainer />}/>\r\n                    <Route path='*' render={ () => <div>404 NOT FOUND</div>}/>\r\n                       </Switch>\r\n                </Suspense>\r\n                </div>\r\n            </div>\r\n\r\n)}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      initialized:state.app.initialized\r\n  }\r\n}\r\n\r\nconst AppContainer = connect (mapStateToProps,{initializeThunk}) (App);\r\n\r\nconst AppJS = () => {\r\n    return <HashRouter >\r\n\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n\r\n            </HashRouter>\r\n}\r\n\r\nexport default AppJS;","import reportWebVitals from './reportWebVitals';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport AppJS from \"./App\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n    ReactDOM.render (\r\n        <React.StrictMode>\r\n            <AppJS />\r\n        </React.StrictMode>,\r\n        document.getElementById('root')\r\n    )\r\n\r\n\r\n\r\nreportWebVitals();\r\n","import {LoginApi} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n\r\nlet SET_USER_DATA = 'auth/SET_USER_DATA';\r\nlet SET_CAPTCHA = 'auth/SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n    id: null as number | null ,\r\n    email:null as string | null,\r\n    login:null as string | null,\r\n    isAuth:false as boolean,\r\n    captcha:null as string | null\r\n\r\n}\r\n\r\ntype initialStateType = typeof initialState;\r\n\r\nconst authReducer = (state = initialState, action:any):initialStateType => {\r\n    switch (action.type) {\r\n\r\n        case SET_USER_DATA:\r\n        case  SET_CAPTCHA :\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n}\r\ntype setUserDataPayloadType = {\r\n    id:number | null,\r\n    email:string | null,\r\n    login:string | null,\r\n    isAuth:boolean\r\n\r\n}\r\ntype setUserDataType = {\r\n    type:typeof SET_USER_DATA,\r\n    payload: setUserDataPayloadType\r\n\r\n}\r\n\r\nexport const setUserData = (id:number | null ,email:string | null ,login:string | null ,isAuth:boolean):setUserDataType =>\r\n    ({type:SET_USER_DATA,payload:{id,email,login,isAuth}});\r\n\r\ntype setCaptchaType = {\r\n    type:typeof SET_CAPTCHA,\r\n    payload:{captcha:string}\r\n}\r\nexport const setCaptcha = (captcha:string):setCaptchaType => ({type:SET_CAPTCHA,payload:{captcha}});\r\n\r\nexport const authThunk = () => async (dispatch:any) => {\r\n\r\n        let data = await LoginApi.authMe()\r\n                if (data.resultCode === 0) {\r\n                    let {id,email,login} = data.data\r\n                    dispatch(setUserData(id,email,login,true))\r\n                }\r\n\r\n}\r\n\r\n\r\nexport const loginThunk = (email:string,password:string,rememberMe:boolean,captcha:string) => async (dispatch:any) => {\r\n        let data = await LoginApi.login(email,password,rememberMe,captcha)\r\n                if (data.resultCode === 0) {\r\n                    dispatch(authThunk())\r\n                } else {\r\n                    if (data.resultCode === 10){\r\n                        dispatch(getCaptchaUrl())\r\n                    }\r\n                    let message = data.messages.length > 0 ?  data.messages[0] : \"Some error\";\r\n                    dispatch(stopSubmit(\"login\",{_error:message}))\r\n                }\r\n\r\n}\r\nexport const loginOutThunk = () => async (dispatch:any) => {\r\n        let data = await LoginApi.loginOut()\r\n                if (data.resultCode === 0) {\r\n                    dispatch(setUserData(null,null,null,false))\r\n                }\r\n\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch:any) => {\r\n        let data = await LoginApi.getCaptcha()\r\n                   dispatch(setCaptcha(data))\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default authReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__31chd\",\"loginBlock\":\"Header_loginBlock__Y3vja\",\"logInOut\":\"Header_logInOut__3xleK\"};","export default __webpack_public_path__ + \"static/media/preloader.d8baec16.gif\";","import preloader from './../../../assets/images/preloader.gif'\r\n\r\nlet Preloader = (props) => {\r\n    return <img src={preloader} alt=\"\"/>\r\n}\r\n\r\nexport default Preloader;","import {ProfileAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {photosType, postsType, profileType} from \"../components/types/types\";\r\n\r\n\r\nlet ADD_POST = 'profilePage/ADD-POST';\r\nlet SET_USERS_PROFILE = 'profilePage/SET_USERS_PROFILE';\r\nlet SET_STATUS = 'profilePage/STATUS';\r\nlet SET_PHOTO = 'profilePage/SET_PHOTO';\r\n\r\n\r\nlet initialState = {\r\n\r\n        posts: [\r\n            {\r\n                id: 0,\r\n                message: \"It's my first post!\",\r\n                likesCount: 35,\r\n                avatar: \"https://twitchinfo.ru/wp-content/uploads/2020/01/ava-bigbrauz.png\"\r\n            } ,\r\n            {\r\n                id: 1,\r\n                message: \"Hello,how are you?\",\r\n                likesCount: 4,\r\n                avatar: \"https://i.pinimg.com/originals/97/ff/74/97ff74dc031d3301248dd4d5546254a6.png\"\r\n            }\r\n        ] as Array <postsType>,\r\n        profile: null as profileType | null,\r\n        status:\"\"\r\n\r\n}\r\n\r\ntype initialStateType = typeof initialState\r\n\r\nconst profileReducer = (state = initialState, action:any):initialStateType => {\r\n    switch (action.type) {\r\n\r\n\r\n\r\n        case ADD_POST :\r\n            let newPost = {\r\n                id: 2,\r\n                message: action.postText,\r\n                likesCount: 0,\r\n                avatar: 'https://img1.freepng.ru/20180529/bxp/kisspng-user-profile-computer-icons-login-user-avatars-5b0d9430b12e35.6568935815276165607257.jpg'\r\n            };\r\n\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n\r\n\r\n            }\r\n\r\n        case SET_USERS_PROFILE :\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n\r\n        case SET_STATUS :\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n\r\n        case SET_PHOTO :\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile,photos:action.photos} as profileType\r\n            }\r\n\r\n\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\ntype addPostType = {\r\n    type:typeof ADD_POST,\r\n    postText:string\r\n}\r\nexport const addPost = (postText:string):addPostType => ({type:ADD_POST,postText});\r\n\r\ntype setUserProfileType = {\r\n    type:typeof SET_USERS_PROFILE,\r\n    profile:profileType\r\n\r\n}\r\nexport const setUserProfile = (profile:profileType):setUserProfileType => ({type:SET_USERS_PROFILE,profile});\r\n\r\ntype setStatusType = {\r\n    type:typeof SET_STATUS,\r\n    status:string\r\n\r\n}\r\nexport const setStatus = (status:string): setStatusType => ({type:SET_STATUS,status});\r\n\r\ntype setPhotoType = {\r\n    type:typeof SET_PHOTO,\r\n    photos: photosType\r\n\r\n}\r\nexport const setPhoto = (photos:photosType):setPhotoType => ({type:SET_PHOTO,photos});\r\n\r\n\r\nexport const profileThunk = (userId:number) => async (dispatch:any) => {\r\n        let data = await ProfileAPI.userProfile(userId)\r\n                dispatch(setUserProfile(data))\r\n\r\n}\r\nexport const getStatusThunk = (userId:number) => async (dispatch:any) => {\r\n    let data = await  ProfileAPI.getStatus(userId)\r\n            dispatch(setStatus(data))\r\n\r\n}\r\nexport const updateStatusThunk = (status:string) =>async (dispatch:any) => {\r\n    let data = await ProfileAPI.updateStatus(status)\r\n                if (data.resultCode === 0)\r\n                dispatch(setStatus(status))\r\n\r\n}\r\nexport const updatePhotoThunk = (photo:photosType) =>async (dispatch:any) => {\r\n    let data = await ProfileAPI.updatePhoto(photo)\r\n                if (data.resultCode === 0)\r\n                dispatch(setPhoto(data.data.photos))\r\n\r\n}\r\n\r\nexport const dataThunk = (profile:profileType) =>async (dispatch:any,getState:any) => {\r\n    const userId = getState().auth.id\r\n    let data = await ProfileAPI.updateData(profile)\r\n      if (data.resultCode === 0) {\r\n          dispatch(profileThunk(userId))\r\n      } else {\r\n          dispatch(stopSubmit(\"data\",{_error:data.messages[0]}));\r\n          return Promise.reject(data.messages[0])\r\n      }\r\n\r\n\r\n}\r\n\r\n\r\nexport default profileReducer;","\r\n\r\nlet ADD_MESSAGE = 'dialogsPage/ADD-MESSAGE';\r\n\r\ntype messagesType = {\r\n    id:number,\r\n    message:string\r\n}\r\ntype namesType = {\r\n    id:number,\r\n    name:string,\r\n    avatar:string\r\n}\r\n\r\nlet initialState = {\r\n\r\n        messages: [\r\n            {id: 0, message: \"Great job,thank you!\"},\r\n            {id: 1, message: \"Hi,I'm still happy!!\"},\r\n            {id: 2, message: \"Hello,how are you?!\"}\r\n        ] as Array <messagesType>,\r\n        names: [\r\n            {id: 0, name: \"Sergey\", avatar: \"https://twitchinfo.ru/wp-content/uploads/2020/01/ava-bigbrauz.png\"},\r\n            {\r\n                id: 1,\r\n                name: \"Victor\",\r\n                avatar: \"https://shutniki.club/wp-content/uploads/2019/12/0aeb27b230deae824f3d1bce090bc2e9.png\"\r\n            },\r\n            {id: 2, name: \"Olga\", avatar: \"https://i.pinimg.com/originals/97/ff/74/97ff74dc031d3301248dd4d5546254a6.png\"},\r\n            {id: 3, name: \"Ekaterina\", avatar: \"https://cdn.iconscout.com/icon/free/png-512/avatar-369-456321.png\"},\r\n            {id: 4, name: \"Roman\", avatar: \"https://img2.freepng.ru/20180413/gee/kisspng-discord-avatar-twitch-youtube-profile-5ad03f365071c0.1274698915235971103295.jpg\"}\r\n        ] as Array <namesType>,\r\n\r\n\r\n}\r\n\r\ntype initialStateType = typeof initialState\r\n\r\nconst dialogsReducer = (state = initialState, action: any): initialStateType => {\r\n\r\n    switch (action.type) {\r\n        case ADD_MESSAGE :\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 3, message: action.messageText}],\r\n\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype addMessageType ={\r\n    type:typeof ADD_MESSAGE,\r\n    messageText:string\r\n}\r\nexport const addMessage = (messageText:string):addMessageType => ({type:ADD_MESSAGE,messageText});\r\n\r\n\r\nexport default dialogsReducer;","import {usersACT, usersAPI} from \"../api/api\";\r\nimport {photosType} from \"../components/types/types\";\r\n\r\nlet FOLLOW = 'usersPage/FOLLOW';\r\nlet UNFOLLOW = 'usersPage/UNFOLLOW';\r\nlet SET_USERS = 'usersPage/SET_USERS';\r\nlet SET_CURRENT_PAGE = 'usersPage/SET_CURRENT_PAGE';\r\nlet SET_USER_COUNT = 'usersPage/SET_USER_COUNT';\r\nlet TOGGLE_IS_FETCHING = 'usersPage/TOGGLE_IS_FETCHING';\r\nlet TOGGLE_FOLLOW_USER = 'usersPage/TOGGLE_FOLLOW_USER';\r\n\r\ntype usersType = {\r\n    id: number\r\n    name: string\r\n    status: string\r\n    photos:photosType\r\n    followed:boolean\r\n}\r\n\r\nlet initialState = {\r\n    users: [] as Array <usersType> ,\r\n    usersCount : 0 ,\r\n    pageSize : 5,\r\n    currentPage: 1,\r\n    isFetching:false,\r\n    followingInProgress:[] as Array <number> // array of users id\r\n}\r\n\r\ntype initialStateType = typeof initialState\r\n\r\nconst usersReducer = (state = initialState, action: any):initialStateType => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                        if (u.id === action.userId) {\r\n                            return {...u, followed: true}\r\n                        }\r\n                        return u;\r\n                    }\r\n                )\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                        if (u.id === action.userId) {\r\n                            return {...u, followed: false}\r\n                        }\r\n                        return u;\r\n                    }\r\n                )\r\n            }\r\n        case SET_USERS: {\r\n            return {...state,users:action.users}\r\n        }\r\n\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state,currentPage:action.pageNumber}\r\n        }\r\n\r\n        case SET_USER_COUNT: {\r\n            return {...state,usersCount:action.count}\r\n        }\r\n\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state,isFetching:action.fetching}\r\n        }\r\n\r\n        case TOGGLE_FOLLOW_USER: {\r\n            return  {...state,followingInProgress:action.fetching\r\n                    ? [...state.followingInProgress ,action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n\r\ntype followType = {\r\n    type:typeof FOLLOW,\r\n    userId:number\r\n}\r\nexport const follow = (userId:number):followType => ({type:FOLLOW, userId});\r\n\r\ntype unfollowType = {\r\n    type:typeof UNFOLLOW,\r\n    userId:number\r\n}\r\nexport const unfollow = (userId:number):unfollowType => ({type:UNFOLLOW, userId});\r\n\r\ntype setUsersType = {\r\n    type:typeof SET_USERS,\r\n    users:Array <usersType>\r\n}\r\nexport const setUsers = (users:Array <usersType>):setUsersType => ({type:SET_USERS, users});\r\n\r\ntype setCurrentPageType = {\r\n    type:typeof SET_CURRENT_PAGE,\r\n    pageNumber:number\r\n}\r\nexport const setCurrentPage = (pageNumber:number):setCurrentPageType => ({type:SET_CURRENT_PAGE, pageNumber});\r\n\r\ntype setTotalUsersCountType = {\r\n    type:typeof SET_USER_COUNT,\r\n    count:number\r\n}\r\nexport const setTotalUsersCount = (count:number):setTotalUsersCountType => ({type:SET_USER_COUNT, count});\r\n\r\ntype setToggleIsFetchingType = {\r\n    type:typeof TOGGLE_IS_FETCHING,\r\n    fetching:boolean\r\n}\r\nexport const setToggleIsFetching = (fetching:boolean):setToggleIsFetchingType => ({type:TOGGLE_IS_FETCHING, fetching});\r\n\r\ntype setFollowingInProgressType = {\r\n    type:typeof TOGGLE_FOLLOW_USER,\r\n    fetching:boolean\r\n    userId:number\r\n}\r\nexport const setFollowingInProgress = (fetching:boolean,userId:number):setFollowingInProgressType => ({type:TOGGLE_FOLLOW_USER, fetching,userId});\r\n\r\n\r\nexport const requestUsers = (currentPage:number, pageSize:number) => async (dispatch:any) => {\r\n\r\n     dispatch(setToggleIsFetching(true));\r\n    let data = await usersAPI.getUsers(currentPage,pageSize)\r\n         dispatch(setToggleIsFetching(false));\r\n         dispatch(setUsers(data.items));\r\n         dispatch(setTotalUsersCount(data.totalCount))\r\n\r\n}\r\n\r\nexport const getUsersPage = (pageNumber:number,pageSize:number) => async (dispatch:any) => {\r\n        dispatch(setCurrentPage(pageNumber))\r\n        dispatch(setToggleIsFetching(true));\r\n    let data = await usersAPI.getUsers2(pageNumber,pageSize)\r\n            dispatch(setToggleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n}\r\n\r\nexport const followThunk = (userId:number) => async (dispatch:any) => {\r\n    dispatch(setFollowingInProgress(true, userId))\r\n    let data = await usersACT.userFollow(userId)\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(follow(userId))\r\n    }\r\n\r\n    dispatch(setFollowingInProgress(false, userId))\r\n\r\n}\r\n\r\nexport const unfollowThunk = (userId:number) => async (dispatch:any) => {\r\n    dispatch(setFollowingInProgress(true, userId))\r\n    let data = await usersACT.userUnfollow(userId)\r\n    if (data.resultCode === 0) {\r\n        dispatch(unfollow(userId))\r\n    }\r\n\r\n    dispatch(setFollowingInProgress(false, userId))\r\n\r\n}\r\n\r\nexport default usersReducer;\r\n","import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL:\"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers:{\"API-KEY\":\"bd1f7934-d488-4748-b181-52635ba28a3f\"}\r\n\r\n\r\n})\r\n\r\n\r\nexport const usersAPI = {\r\n\r\n    getUsers (currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n\r\n\r\n\r\n    getUsers2 (pageNumber, pageSize = 10) {\r\n        return instance.get(`users?page=${pageNumber}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport const usersACT = {\r\n    userUnfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n\r\n    userFollow (userId) {\r\n       return instance.post(`follow/${userId}`, {})\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const ProfileAPI =  {\r\n\r\n    userProfile (userId) {\r\n    return instance.get(\"profile/\" + userId)\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n\r\n    getStatus (userId) {\r\n    return instance.get(\"profile/status/\" + userId)\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n\r\n    updateStatus (status) {\r\n    return instance.put(\"profile/status\", {status})\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n    } ,\r\n\r\n    updatePhoto (photo) {\r\n        const formData = new FormData();\r\n        formData.append('image', photo);\r\n\r\n    return instance.put(\"profile/photo\",  formData, {\r\n        headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n        }})\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n\r\n    updateData (profile) {\r\n        return instance.put(\"profile\", profile).then(response => {\r\n            return response.data\r\n        })\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const LoginApi = {\r\n\r\n    authMe ()  {\r\n        return instance.get(\"auth/me\" )\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n       login (email,password,rememberMe,captcha)  {\r\n        return instance.post(\"auth/login\", {email,password,rememberMe,captcha} )\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n      loginOut ()  {\r\n        return instance.delete(\"auth/login\" )\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n\r\n      getCaptcha ()  {\r\n        return instance.get(\"/security/get-captcha-url\" )\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n"],"sourceRoot":""}