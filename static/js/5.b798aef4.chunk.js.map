{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","components/utils/validators/validators.js","components/common/FormsControls/FormsControls.jsx","components/Dialogs/Dialogs.module.css","components/Dialogs/NameItem/NameItem.module.css","components/Dialogs/MessageItem/MessageItem.module.css","components/Dialogs/NameItem/NameItem.jsx","components/Dialogs/MessageItem/MessageItem.jsx","components/Dialogs/Dialogs.jsx","components/HOC/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","required","value","maxLengthCreator","maxLength","length","formsControl","tag","input","meta","props","hasError","error","touched","className","mod","warning","React","createElement","errorMessage","Textarea","Input","NameItem","path","id","link","to","nameItem","avatar","src","alt","name","MessageItem","messageItem","message","MessageReduxForm","reduxForm","form","onSubmit","handleSubmit","addMessage","Field","component","validate","Dialogs","namesElements","dialogsPage","names","map","n","messagesElements","messages","m","dialogs","messageText","mapStateToPropsRedirect","state","isAuth","auth","compose","connect","Component","RedirectComponent","this"],"mappings":"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","file":"static/js/5.b798aef4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"warning\":\"FormsControls_warning__3zCki\",\"errorMessage\":\"FormsControls_errorMessage__1Qk8O\",\"formError\":\"FormsControls_formError__2dVxI\",\"test\":\"FormsControls_test__1L5SY\"};","\r\nexport const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\"\r\n\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined\r\n}","import React from \"react\";\r\nimport mod from \"./FormsControls.module.css\"\r\n\r\nconst formsControl = (tag) => ({input,meta,...props}) => {\r\n\r\n    const hasError = meta.error && meta.touched;\r\n\r\n    return (\r\n\r\n        <div className={hasError ? mod.warning : \"\"}>\r\n            <div> {React.createElement(tag, {...input, ...props})}</div>\r\n            {hasError && <span className={mod.errorMessage}>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = formsControl(\"textarea\")\r\nexport const Input = formsControl(\"input\")","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__koEMS\",\"names\":\"Dialogs_names__17d6O\",\"messages\":\"Dialogs_messages__17Vua\",\"addMessage\":\"Dialogs_addMessage__2h5zO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"NameItem_link__2T7Kq\",\"nameItem\":\"NameItem_nameItem__2KqdR\",\"avatar\":\"NameItem_avatar__1eLre\",\"name\":\"NameItem_name__2sUxB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageItem\":\"MessageItem_messageItem__16Zo3\"};","import {NavLink} from \"react-router-dom\";\r\nimport mod from './NameItem.module.css'\r\n\r\n\r\n\r\nconst NameItem = (props) => {\r\n\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={mod.link}>\r\n        <NavLink to ={path}>\r\n\r\n            <div className={mod.nameItem}>\r\n\r\n            <div className={mod.avatar}><img src={props.avatar} alt=\"\"/></div>\r\n            <div className={mod.name}>{props.name}</div>\r\n\r\n            </div>\r\n\r\n         </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NameItem;","import mod from './MessageItem.module.css'\r\n\r\nconst MessageItem = (props) => {\r\n    return (\r\n        <div className={mod.messageItem}>\r\n         {props.message}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageItem;","import React from 'react';\r\nimport mod from './Dialogs.module.css'\r\nimport NameItem from \"./NameItem/NameItem\";\r\nimport MessageItem from \"./MessageItem/MessageItem\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../utils/validators/validators\";\r\n\r\n\r\nconst maxLength = maxLengthCreator(50)\r\n\r\nconst DialogsForm = (props) => {\r\n    return (\r\n   <form onSubmit={props.handleSubmit} >\r\n\r\n                <div className={mod.addMessage}>\r\n                    <div>\r\n                        <Field name=\"messageText\" component={Textarea}\r\n                               validate={[required,maxLength]} />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <button>Send</button>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nconst MessageReduxForm = reduxForm({\r\n    form: 'newMessageText'\r\n})(DialogsForm)\r\n\r\n\r\n    const Dialogs = (props) => {\r\n\r\n   const addNewMessage = (value) => {\r\n            props.addMessage(value.messageText)\r\n        }\r\n\r\n        let namesElements = props.dialogsPage.names.map(n => <NameItem key={n.id} name={n.name} id={n.id} avatar={n.avatar} />);\r\n\r\n        let messagesElements = props.dialogsPage.messages.map(m => <MessageItem key={m.id} message={m.message} />);\r\n\r\n        return (<div className={mod.dialogs} >\r\n\r\n            <div className={mod.names}>\r\n                {namesElements}\r\n            </div>\r\n\r\n            <div className={mod.messages}>\r\n                {messagesElements}\r\n            </div>\r\n\r\n            <div><MessageReduxForm onSubmit={addNewMessage}/></div>\r\n\r\n        </div>)\r\n\r\n    }\r\n\r\nexport default Dialogs;","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nlet mapStateToPropsRedirect = (state) => ({\r\n    isAuth:state.auth.isAuth\r\n})\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"login\"}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect (mapStateToPropsRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent;\r\n\r\n}","import Dialogs from './Dialogs'\r\nimport {addMessage} from \"../../redux/dialogs-reducer\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n\r\n    }\r\n};\r\n\r\n\r\nexport default compose (\r\n    connect (mapStateToProps,{addMessage}),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n\r\n\r\n\r\n"],"sourceRoot":""}